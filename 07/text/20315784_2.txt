---計算方法の説明---
ラグランジュの補間法では，与えられたxの点を全て通る関数yを求めるアルゴリズムである．すなわち，任意の点xに対しては対応するyの値は確実に求められる．入力xをyに，入力yをxに交換することにより，yに対するxのグラフを得ることができる（数学の逆関数的な考え方）．
逆関数のx=0の時のyの値は元の関数のy=0の時のxの値に対応する．そのため，y入力としてxの補完点を作成すコードを作成し，y=0の時のxの値を求めるようにした．


---実行結果---
y=0.000000でのyの値は2.279365


---プログラムのソース---
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

#define N 4          // データ点数
#define DELTA_X 0.01 // 分割幅

int main()
{
    int i, j;
    double a, tmp, sum;
    double x[N] = {1.0, 2.0, 3.0, 4.0}; // ここにデータ点の座標を入力
    double y[N] = {-0.4, -0.1, 0.3, 0.8};

    a = 0; // 求めたいyの点

    sum = 0;
    for (i = 0; i < N; i++)
    {
        tmp = 1.0;
        for (j = 0; j < N; j++)
        {
            if (i != j)
                tmp *= (a - y[j]) / (y[i] - y[j]);
        }
        sum += x[i] * tmp;
    }

    printf("y=%lfでのyの値は%lf\n", a, sum);

    return 0;
}

